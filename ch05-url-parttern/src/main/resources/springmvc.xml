<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:vc="http://www.springframework.org/schema/mvc" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        https://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        https://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--声明主键扫描器-->
    <context:component-scan base-package="com.wuminghui.controller"></context:component-scan>
    <!--声明springmvc框架中的视图解析器，帮助开发人员设置视图文件的路径-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--前缀，视图文件的路径-->
        <property name="prefix" value="/WEB-INF/view/"></property>
        <!--后缀，视图文件的扩展名--> 
        <property name="suffix" value=".jsp"></property>
    </bean>

    <!--第二种处理静态资源的方式（常用）
    mvc：resourse加入后，框架会创建ResourseHttpRequestHandler这个处理器对象。
    让这个对象去处理静态资源的访问，不依赖tomcate服务器。
    属性：mapping：访问静态资源的uri地址，使用通配符 **  可表示该目录下的所有文件和目录以及子目录下的子目录和子文件（所有）
         location：静态资源在项目中的目录位置。

    -->
   <!-- <mvc:resources mapping="/images/**" location="/images/"></mvc:resources>&lt;!&ndash;表示符合/images/**形式的请求的，都到/images/目录下去寻找资源&ndash;&gt;
    <mvc:resources mapping="/html/**" location="/html/"></mvc:resources>
    <mvc:resources mapping="/js/**" location="/js/"></mvc:resources>-->
    <!--以上方式挨个指定过于繁琐，一般将所有静态资源放入webapp下的static文件夹中，再统一指定-->
    <mvc:resources mapping="/static/**" location="/static/"></mvc:resources>
<!--<mvc:resources >和@RequestMapping有冲出，仍然需要注解驱动解决-->
    <mvc:annotation-driven></mvc:annotation-driven>
</beans>